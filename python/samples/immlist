#!/usr/bin/env python
############################################################################
#
# (C) Copyright 2011 The OpenSAF Foundation
# (C) Copyright 2018 Ericsson AB. All rights reserved.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. This file and program are licensed
# under the GNU Lesser General Public License Version 2.1, February 1999.
# The complete license can be accessed from the following location:
# http://opensource.org/licenses/lgpl-license.php
# See the Copying file included with the OpenSAF distribution for full
# licensing terms.
#
# Author(s): Wind River Systems, Inc.
#            Ericsson AB.
#
############################################################################
""" Sample illustrates the usage of immlist """
from __future__ import print_function
import json
import argparse

from pyosaf import saImm
from pyosaf.utils.immom.accessor import ImmOmAccessor


def immlist(args):
    """ Get imm objects with dn input in arguments """
    objects = {}
    accessor = ImmOmAccessor()
    accessor.init()

    for dn in args.obj_dn:
        _, obj = accessor.get(dn, attr_name_list=args.attributes)
        if obj:
            attributes = {}
            for name, value_pair in obj.attrs.iteritems():
                type_str = saImm.eSaImmValueTypeT.whatis(value_pair[0])
                value = value_pair[1]
                attributes[name] = [type_str, value]

            objects[dn] = attributes
        else:
            objects[dn] = None

    return objects


if __name__ == '__main__':
    description = """
    Illustrates the usage of immlist

    Use like this

    $ immlist -a attr_name_1 -a attr_name_2 obj_dn
    """

    parser = argparse.ArgumentParser(
        description=description,
        formatter_class=argparse.RawTextHelpFormatter)

    parser.add_argument('obj_dn', type=str, help='object DN', nargs='*')
    parser.add_argument('-a', '--attributes', help='attribute list of object',
                        dest='attributes', action='append')
    parser.add_argument('-u', '--pretty-off', dest='ugly',
                        help='turn off pretty printing.',
                        action='store_true', default=False)

    arguments = parser.parse_args()

    result = immlist(arguments)

    print(json.dumps(result, indent=None if arguments.ugly else 4))
