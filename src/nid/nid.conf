# This file contains low level global configuration for OpenSAF
# Please read

# /etc/init.d NID values, do not edit unless you know what you are doing
NID_MAGIC=AAB49DAA
NIDFIFO=$pkglocalstatedir/nodeinit.fifo
DAEMON_STARTED=1
DAEMON_START_FAILED=2
DAEMON_NOT_FND=$DAEMON_START_FAILED

# Set the timeout to a non-zero value to wait for that many secs
# and reboot the node on start failure. Set to 0 if no reboot 
# is required on start failure.
# If using systemd, you may also need to update RestartSec in opensafd.service.
# The value for RestartSec should be greater than the value for
# REBOOT_ON_FAIL_TIMEOUT to avoid having systemd restart opensafd before the
# reboot.
REBOOT_ON_FAIL_TIMEOUT=0

# MDS transport protocol, values supported are TIPC or TCP
export MDS_TRANSPORT=TCP

# This is valid when above MDS_TRANSPORT is set to TIPC.
# Setting MDS_TIPC_MCAST_ENABLED to 1 or 0, allows OpenSAF
# to enable or disable TIPC Multicast Messaging.
# By Default TIPC  Multicast Messaging is Enabled.
# Note: In case of TIPC Multicast Messaging disabled (0), the performance
# of OpenSAF will be considerably lower as compared to Enabled (1).
export MDS_TIPC_MCAST_ENABLED=1

# This is valid when above MDS_TRANSPORT is set to TIPC 
# Should OpenSAF manage (load kernel module and initialize) TIPC or not
# Note: When user has taken the responsibility to manage TIPC, then before
# starting OpenSAF TIPC has to be configured according to OpenSAF requirements.
# This can be done by (re)using the $pkglibdir/configure_tipc script
# as: $ configure_tipc start <interface name> <TIPC netid>
# For eg:- $ configure_tipc start eth0 9859

export OPENSAF_MANAGE_TIPC="yes"

# This is valid when above MDS_TRANSPORT is set to TIPC and OPENSAF_MANAGE_TIPC is set to "yes" ,
# values supported is the network interface name, e.g. eth3  
TIPC_ETH_IF=eth0
 
# This is valid when above MDS_TRANSPORT is set to TIPC, nd OPENSAF_MANAGE_TIPC is set to "yes",  
# values supported is TIPC netid ,e.g 4711  
TIPC_NET_ID=1234

# Specifies how long "opensafd stop" should wait before stop has considered to fail
OPENSAF_TERMTIMEOUT=60

# Number of seconds before a reboot is escalated to an immediate reboot via the
# SysRq interface /proc/sysrq-trigger.  Comment it out or set it to zero to
# disable this feature.  Note that you must make sure the kernel allows reboot
# via SysRq for this feature to work.
export OPENSAF_REBOOT_TIMEOUT=60

# Specify the UNIX group and user OpenSAF run as
# The below variables have to be changed to "root"
# if user has built OpenSAF to run as root
export OPENSAF_GROUP=opensaf
export OPENSAF_USER=opensaf

# Setting OPENSAF_CLUSTERAUTO_SCALE_ENABLED to 1 or 0 will enable or disable
# support for automatic cluster scaling in OpenSAF. Currently, only scale-out is
# supported. When automatic cluster scaling is enabled, the CLM service will
# call the customizable script $pkglibdir/opensaf_scale_out with one or more
# command-line arguments, where each argument is a comma-separated list of
# properties of a node that wishes to join the cluster. You must customize this
# script so that it adds the necessary IMM objects for the new node(s). See the
# README file of the CLM service for more information.
#export OPENSAF_CLUSTERAUTO_SCALE_ENABLED=0
