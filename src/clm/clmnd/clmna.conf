# This file contains configuration for the CLMNA(CLM NodeAgent) service

# Uncomment the next line if you want to run the CLMNA through valgrind
#export TOOL="valgrind --leak-check=full --log-file=/tmp/log.valgrind"

# Uncomment the next line to enable trace
#args="--tracemask=0xffffffff"

# Healthcheck keys
export CLMNA_ENV_HEALTHCHECK_KEY="Default"

# Time in milliseconds without an SC to wait before starting an election. CLMNA
# will detect the presence of system controllers in the cluster (ACTIVE and
# STANDBY). If no system controller has been seen during the configured time
# period, CLMNA will initate an election with the own node as a candidate for a
# new active system controller. Note that lowering this value will increase the
# risk of split-brain. Values lower than 5000 are not recommended on cluster
# with more than two system controllers.
#export CLMNA_ELECTION_DELAY_TIME=200

# Uncomment the next two lines to specify the address that will be presented to
# the application through the information model. CLMNA_ADDR_FAMILY and
# CLMNA_ADDR_VALUE let you specify the values shown in the
# saClmNodeCurrAddressFamily and saClmNodeCurrAddress runtime attributes of the
# node's SaClmNode IMM object. If these options are not set, CLM will try to try
# to figure out the node's address by itself. Since a node can have more than
# one network address, the address chosen by CLM may not be the address your
# application is interested in. By explicitly specifying the address using
# CLMNA_ADDR_FAMILY and CLMNA_ADDR_VALUE, you will be guaranteed that the
# correct address is presented.
#export CLMNA_ADDR_FAMILY=1
#export CLMNA_ADDR_VALUE=10.130.100.114

# The string argument passed to the opensaf_scale_out script is default
# comma separated. To use another separator character uncomment the next line.
#export CLMNA_IFS=";"

# Uncomment the next line to enable info level logging
#args="--loglevel=info"

# Only log priority LOG_WARNING and higher to the system log file.
# All logging will be recorded in a new node local log file $PKGLOGDIR/osaf.log.
# Uncomment the next line to enable this service to log to OpenSAF node local log file.
# export OSAF_LOCAL_NODE_LOG=1

# THREAD_TRACE_BUFFER variable enables the tracing, writes the trace
# to thread based buffer in circular fashion. The trace buffers will
# be flushed to file if an abnormal end hits, i.e. LOG_ER is called
# export THREAD_TRACE_BUFFER=1
