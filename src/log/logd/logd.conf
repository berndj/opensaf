# This file contains configuration for the SAF LOG service
# See the file osaf/services/saf/logsv/README for more configuration options.
#NOTE! Environment variables defined in this file,
#      except LGSV_ENV_HEALTHCHECK_KEY,
#      will not be used if an object of the OpenSafLogConfig class exists in IMM.

# Uncomment the next line if you want to run the log server through valgrind
#export TOOL="valgrind --leak-check=full --log-file=/tmp/log.valgrind"

# Uncomment the next line to enable trace
#args="--tracemask=0xffffffff"

# Healthcheck keys
export LGSV_ENV_HEALTHCHECK_KEY="Default"

# The "implementation defined root directory" as mentioned in the LOG spec.
# All log files will be stored here or in a subdirectory.
# Make sure this directory reside on the replicated partition for HA property.
# NOTE! Will not be used if an object of the OpenSafLogConfig class exists in IMM!
export LOGSV_ROOT_DIRECTORY=$pkglogdir/saflog

# Having a fixed log record size have the effect that a log record can be
# truncated and consume unnecessary disk and network resources.
# LOG support setting saLogStreamFixedLogRecordSize to zero. This means
# that a log record will not get padded but instead be line-oriented
# (\n terminates the log record). The maximum size where truncation is anyway
# enforced is configured with this parameter (in number of bytes).
# Uncomment and change the following line to change the default value.
#export LOGSV_MAX_LOGRECSIZE=1024

# Uncomment the next line to enable info level logging
#args="--loglevel=info"

# Log data group used to share OpenSAF log to other users.
# If set then any log created by the LOG service will be owned by this group.
# Users want to read log data need to become member of this group.
# NOTE: will not be used if defined in the OpenSafLogConfig object.
# export LOGSV_DATA_GROUPNAME=<groupname>

# Only log priority LOG_WARNING and higher to the system log file.
# All logging will be recorded in a new node local log file $PKGLOGDIR/osaf.log.
# Uncomment the next line to enable this service to log to OpenSAF node local log file.
# export OSAF_LOCAL_NODE_LOG=1

# THREAD_TRACE_BUFFER variable enables the tracing, writes the trace
# to thread based buffer in circular fashion. The trace buffers will
# be flushed to file if an abnormal end hits, i.e. LOG_ER is called
# export THREAD_TRACE_BUFFER=1
