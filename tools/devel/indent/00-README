OpenSAF Coding Style
====================

The OpenSAF project uses the Google C++ Style Guide for code written in C++
(files with file name extension .cc and .h), and the Linux kernel coding style
for code written in C (files with file name extension .c).

Before editing the OpenSAF source code, please make sure that you have loaded
the correct source code formatting setting in your editor. Download the settigns
from one of the three following links (depending on which editor you are using):

Code formatting settings file for Eclipse:

https://raw.githubusercontent.com/google/styleguide/gh-pages/eclipse-cpp-google-style.xml

Code formatting settings file for Emacs:

https://raw.githubusercontent.com/google/styleguide/gh-pages/google-c-style.el

Code formatting settings file for Vim:

https://raw.githubusercontent.com/vim-scripts/google.vim/master/indent/google.vim


C++ Coding Style
================

The Google C++ Style Guide can be found at the following URL:

https://google.github.io/styleguide/cppguide.html

To verify that the C++ code in OpenSAF follows the Google C++ Style Guide, you
can use the cpplint tool. The cpplint tool is integrated in the OpenSAF build
system; simply run "make cpplint" at the top of the OpenSAF source code
reporitory to get the result printed to standard error. The aim is that cpplint
should produce zero warnings on the OpenSAF code. In case of false positives,
you can add // NOLINT at the end of a line or // NOLINTNEXTLINE at the end of
the line before.

To correct formatting problems in the code, you can use the tool clang-format
with the option -style=google. The tool clang-format is included in many Linux
distributions; you can install it e.g. using the command "sudo apt install
clang-format" in Ubuntu.

An alternative way to correct formatting problems in the code is to use the
formatting function in your text editor, provided that you have loaded the
correct formatting settings (see links to settings for various editors in the
first section of this file).


C Coding Style
==============

The Linux kernel coding style can be found at the following URL:

https://github.com/torvalds/linux/blob/master/Documentation/process/coding-style.rst

To verify that the C code in OpenSAF follows the Linux kernel coding style, you
can use the checkpatch tool with the --file option to check individual C source
code files.  The checkpatch tool is included in the Linux kernel source code
repository, and can be downloaded from the following URL:

https://raw.githubusercontent.com/torvalds/linux/master/scripts/checkpatch.pl

The checkpatch tool can also be used to correct some problems, using the
experimental option --fix or --fix-inplace. See "checkpatch.pl --help" for more
information.

An alternative is to use the indent tool with the -linux option. The indent tool
is available in most Linux distributios, see "man indent" for more information.
